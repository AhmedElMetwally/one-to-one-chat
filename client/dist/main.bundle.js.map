{"version":3,"sources":["/home/ahmed/angular/Chat/client/src/$_lazy_route_resource lazy","/home/ahmed/angular/Chat/client/src/app/app.component.css","/home/ahmed/angular/Chat/client/src/app/app.component.html","/home/ahmed/angular/Chat/client/src/app/app.component.ts","/home/ahmed/angular/Chat/client/src/app/app.guard.ts","/home/ahmed/angular/Chat/client/src/app/app.module.ts","/home/ahmed/angular/Chat/client/src/app/app.router.ts","/home/ahmed/angular/Chat/client/src/app/chat/chat.component.css","/home/ahmed/angular/Chat/client/src/app/chat/chat.component.html","/home/ahmed/angular/Chat/client/src/app/chat/chat.component.ts","/home/ahmed/angular/Chat/client/src/app/chat/chat.service.ts","/home/ahmed/angular/Chat/client/src/app/user/logout/logout.component.ts","/home/ahmed/angular/Chat/client/src/app/user/signin/signin.component.html","/home/ahmed/angular/Chat/client/src/app/user/signin/signin.component.ts","/home/ahmed/angular/Chat/client/src/app/user/signup/signup.component.html","/home/ahmed/angular/Chat/client/src/app/user/signup/signup.component.ts","/home/ahmed/angular/Chat/client/src/app/user/user.component.html","/home/ahmed/angular/Chat/client/src/app/user/user.component.ts","/home/ahmed/angular/Chat/client/src/app/user/user.formValidators.ts","/home/ahmed/angular/Chat/client/src/app/user/user.router.ts","/home/ahmed/angular/Chat/client/src/app/user/user.service.ts","/home/ahmed/angular/Chat/client/src/environments/environment.ts","/home/ahmed/angular/Chat/client/src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\n<nav class=\\\"navbar navbar-default navbar-inverse\\\" role=\\\"navigation\\\">\\n  <!-- Brand and toggle get grouped for better mobile display -->\\n  <div class=\\\"container\\\">  \\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" >Ahmed</a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a  routerLinkActive='active' routerLink=\\\"/user\\\">user</a></li>\\n        <!-- hide chat is user is not login -->\\n        <li><a  routerLinkActive='active' routerLink=\\\"chat\\\" *ngIf=\\\"isLogin()\\\" >chat</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\" >\\n  <router-outlet></router-outlet>\\n</div>\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { UserService } from './user/user.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls : ['app.component.css']\n})\nexport class AppComponent {\n  constructor(private _userService:UserService  ){\n    \n    // this function run one time on open the app\n    // ckeck if this app is have token\n    // ckeck auth \n    // if not auth \n    // logout \n    if(this._userService.isLogin()){\n      this._userService.ckeckAuth()\n      .subscribe(data => {\n          // user is auth\n        },\n        err =>{\n          // user is not auth\n          this._userService.Logout()\n        });\n    };\n   \n    \n    \n  };\n\n  // ckeck if user login or not\n  isLogin():boolean{\n    return this._userService.isLogin();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { CanActivate , Router} from '@angular/router';\nimport { UserService } from './user/user.service';\n\n\n// IsLoginGuard\n@Injectable()\nexport class IsLoginGuard implements CanActivate {\n  constructor(private _userService:UserService , private _router:Router ){};\n\n  // if user login true\n  // return true\n  // if user login false\n  // return false\n  // go to /user/login\n  canActivate(){\n    if(this._userService.isLogin()){\n      return true\n    }else{\n      this._router.navigate(['/user' , 'signin'])\n      return false\n    }\n  }\n}\n\n// IsNotLoginGuard\n@Injectable()\nexport class IsNotLoginGuard implements CanActivate {\n    constructor(private _userService:UserService , private _router:Router){};\n    \n    // if user login true\n    // return false \n    // if user login false\n    // return false\n    // go to /user/logout\n    canActivate(){\n        if( ! this._userService.isLogin() ){\n            return true\n        }else{\n            this._router.navigate(['/user' , 'logout'])\n            return false\n        }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/app.guard.ts","import { IsLoginGuard ,IsNotLoginGuard} from './app.guard';\nimport { SigninComponent } from './user/signin/signin.component';\nimport {  routing } from './app.router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { SignupComponent  } from './user/signup/signup.component';\nimport { UserService } from './user/user.service';\nimport { LogoutComponent } from './user/logout/logout.component';\nimport { ChatService } from './chat/chat.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    ChatComponent,\n    SigninComponent,\n    SignupComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing,\n    ReactiveFormsModule\n  ],\n  providers: [UserService   , IsLoginGuard , IsNotLoginGuard  , ChatService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/app.module.ts","import { IsLoginGuard } from './app.guard';\nimport { ChatComponent } from './chat/chat.component';\nimport { UserComponent } from './user/user.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserRouter } from './user/user.router';\n\nconst router : Routes = [\n    {path : '' , redirectTo : 'user' ,pathMatch:'full' },\n    {path : 'user' , component : UserComponent , children: UserRouter },\n    {path : 'chat' , component : ChatComponent , canActivate : [IsLoginGuard] }\n];\n\nexport const routing = RouterModule.forRoot(router);\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/app.router.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"button.user{\\n    min-width: 80%;\\n    padding: 10px 10px;\\n    margin-top: 14px ;\\n}\\n\\n.messages{\\n    padding: 10px;\\n    max-height: 200px;\\n    min-height: 200px;\\n    overflow-y: auto;\\n}\\n\\n.users{\\n    max-height: 300px;\\n    overflow-y: auto;\\n}\\n\\n.messages .msg{\\n    background: #424242;\\n    color: white;\\n    font-size: 15px;\\n    border-radius: 8px;\\n    padding: 5px 15px;\\n    width: 70%;\\n    word-break: break-all;\\n    \\n}\\n\\n.messages .msg.me{\\n    margin-left: 30%;\\n    text-align: right;\\n}\\n\\n.messages .date{\\n    color: whitesmoke;\\n    font-size: 10px;\\n    padding-top: 12px;\\n}\\n \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/app/chat/chat.component.css\n// module id = ../../../../../src/app/chat/chat.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"text-center hidden-xs\\\">Real Time Chat</h1>\\n<h3 class=\\\"text-center visible-xs \\\">Real Time Chat</h3>\\n<hr>\\n<!-- panel-default -->\\n<div class=\\\"panel panel-default chat\\\">\\n  <div class=\\\"panel-body\\\">\\n\\n    <div class=\\\"row\\\">\\n\\n      <!-- users -->\\n      <div class=\\\"col-md-3\\\"  >\\n  \\n        <!-- check if users -->\\n        <div *ngIf=\\\"users.length\\\" class=\\\"users\\\" >\\n\\n          <!-- for loop users -->\\n          <div *ngFor=\\\"let user of users\\\" >\\n            <!-- \\n              onclick check if caller == user\\n              if caller if user\\n              clearCaller\\n              else\\n              set this user in caller\\n              and set class success remove default\\n\\n              if click anther btn \\n              set anther user in caller\\n              set class default remove success\\n              \\n             -->\\n            <button \\n              [ngClass]=\\n              \\\"{\\n                'btn-success' : user.socketId == caller?.socketId, \\n                'btn-default' : user.socketId != caller?.socketId  \\n              }\\\"\\n              class=\\\"btn  center-block user\\\" \\n              title='{{user.email}}' \\n              (click)='caller?._id == user._id ? clearCaller() : call(user)'\\n            >\\n              {{user.name}}\\n             \\n              <!-- if user online -->\\n              <span *ngIf=\\\"user.online\\\" style=\\\"margin-left:5px\\\" class=\\\"glyphicon glyphicon-send text-success\\\"></span>\\n              <span *ngIf=\\\"!user.online\\\" style=\\\"margin-left:5px\\\"  class=\\\"glyphicon glyphicon-send\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n\\n        <!-- check if users -->\\n        <div *ngIf=\\\"!users.length\\\" >\\n          <button class=\\\"btn btn-success center-block user\\\">No  Users</button>\\n        </div>\\n\\n      </div>\\n      <!-- end users -->\\n\\n      <br>\\n\\n      <!-- message body -->\\n      <div class=\\\"col-md-9 panel-body\\\" *ngIf='caller'>\\n\\n        <!-- messages -->\\n        <!-- scroll to end this div -->\\n        <div class=\\\"messages\\\" #scrollMe [scrollTop]=\\\"scrollMe.scrollHeight\\\">\\n          <div *ngFor=\\\"let message of messages\\\" >\\n              <!-- message.user._id == _id  -> this user if owner this msg -->\\n            <p \\n              class=\\\"lead msg \\\"\\n              [ngClass]=\\\"{\\n                'me' : message.user._id == _id \\n              }\\\"\\n              (click)='message.showDate = !message.showDate'\\n            >\\n              {{message.content}}\\n              <br>\\n              <!-- \\n                use undefind proparty to hide date\\n                on click convert this proparty \\n              -->\\n              <span class=\\\"date\\\" [hidden]='!message.showDate'>\\n                  {{message.created | date:'medium'}}\\n              </span>\\n            </p>\\n            \\n            \\n          </div>\\n        </div>\\n        <!-- end messages -->\\n\\n        <br>\\n        \\n        <!-- form sent message -->\\n        <form method=\\\"post\\\" (submit)='sent(msg)'>\\n          <div class=\\\"input-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Message....\\\" #msg >\\n            <div class=\\\"input-group-btn\\\">\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Sent</button>\\n            </div>\\n          </div>\\n        </form>\\n        <!-- end form sent message -->\\n\\n      </div>\\n      <!-- end message body -->\\n\\n    </div>\\n  </div>\\n\\n<!-- panel-default -->\\n</div> \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/app/chat/chat.component.html\n// module id = ../../../../../src/app/chat/chat.component.html\n// module chunks = main","import { Imsg } from './chat.msg';\nimport { UserService } from './../user/user.service';\nimport { Iuser } from './../user/app.user';\nimport { Component, OnInit } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { ChatService } from './chat.service';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls : ['chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  \n  // socket.io\n  io = io(environment.url);\n  \n  // _id  \n  // token\n  // myuser\n  _id :string = localStorage.getItem('_id');\n  token :string = localStorage.getItem('token');\n  user: Iuser;\n\n  // caller User \n  caller:Iuser ;\n\n  // all users \n  users:Iuser[] = [];\n  \n  // get all messages of caller\n  messages:Imsg[] = [];\n\n  \n\n\n\n  constructor(private _chatService:ChatService , private _userService:UserService) {\n    // login in soketIo \n    // sent _id\n    // socket.io update socketId in db \n    this.io.emit('login' , this.token );\n\n    // get all users  \n    // get myuser from users\n    // filter myuser form users\n    this.io.on('login' , users => {\n      this.users = [];\n      for(let i = 0 ; i < users.length ; i++){\n        if(users[i]._id == this._id){\n          this.user = users[i];\n        }else{\n          this.users.push(users[i])\n        }\n      }\n    });\n\n    // refresh\n    // get all users \n    // filter myUser form online users\n    // if thisUser is in caller\n    // ckeckCallerIsOnline after this refresh\n    this.io.on('refresh' , users =>{\n      this.users = [];\n      for(let i = 0 ; i < users.length ; i++){\n        if(users[i]._id == this._id){\n          this.user = users[i];\n        }else{\n          this.users.push(users[i])\n        }\n      }\n      if(this.caller){\n        this.ckeckCallerIsOnline();\n      }\n      console.log('refresh onlineUsers');\n    });\n\n    // on new msg\n    // check if caller\n    // ckeck if msg.callerId is userId\n    this.io.on('msg' , msg => {\n      if(this.caller){\n        if(this.caller._id == msg.user._id){\n          this.messages.push(msg);\n        };\n      };\n    });\n\n    \n    // on any error in socket.io\n    // logout this user \n    // to go user/signin\n    this.io.on('error' , err => {\n      console.log(err);\n      this._userService.Logout();\n    })\n\n\n\n  };\n\n  // sent message on submit form\n  // content - caller  - user._id\n  // import to caller\n  // must click the user btn to run function call\n  // push this msg in messages after sent it \n  sent(msg){\n    if(msg.value){\n      this.io.emit('msg' , {\n        content : msg.value,\n        user : this.user,\n        caller : this.caller,\n        created : new Date().toISOString()\n      });\n\n      this.messages.push({\n        content : msg.value,\n        user : this.user,\n        caller : this.caller,\n        created : new Date().toISOString()\n      })\n\n      msg.value = '';\n    }\n  };\n  \n  // call user\n  // set caller in this.caller to sent and get the messages\n  // show form \n  // replace all messages to his messages\n  call(caller){\n    this.caller = caller;\n    this.messages = [];\n    this._chatService.getMessages( this._id  , caller._id)\n      .subscribe(messages => {\n        this.messages = messages;\n      })\n  };\n\n  // clear Call\n  // clear messages\n  // hide form and messages\n  clearCaller(){\n    this.caller = null;\n    this.messages = [];\n  };\n\n  \n  // for loop nlineUser\n  // check if caller._id is in online User\n  // if caller not online \n  // set caller = null\n  // reset isConnect = false \n  isConnect:boolean = false;\n  ckeckCallerIsOnline(){\n    for(var i = 0 ; i < this.users.length ; i++){\n      if( this.users[i]._id == this.caller._id && this.users[i].online ){\n        this.isConnect = true;\n        break;\n      }\n    }\n    if(!this.isConnect){\n      this.caller = null\n    }\n    \n    this.isConnect = false;\n  }\n\n  ngOnInit(){};\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/chat/chat.component.ts","import { environment } from './../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { Http , Headers , Response} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ChatService {\n\n  constructor(private _http:Http) { };\n\n  getMessages( userId , callerId){\n    return this._http.get(`${environment.url}/api/messages?userId=${userId}&&callerId=${callerId}`)\n      .map((res:Response) => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/chat/chat.service.ts","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-logout',\n  template:`\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"logout()\">Logout</button>\n  `\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private _userService:UserService ) { };\n  // logout user\n  logout(){\n    this._userService.Logout();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/user/logout/logout.component.ts","module.exports = \"\\n<!-- show error in signup -->\\n<div *ngIf=\\\"ErrorAlert\\\"  class=\\\"alert alert-danger\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\n  <strong>Signin Fail</strong> Pleace Ckeck Your Date ... \\n</div>\\n\\n\\n<form  role=\\\"form\\\" [formGroup]='myform' (submit)='onSubmit()'>\\n  <!-- \\n    set class error if formControlName us invalid\\n    set class success if formControlName us valid\\n\\n    Validator [email , required] in html only\\n  -->\\n  <div class=\\\"form-group has-feedback\\\" \\n    [ngClass]=\\\"{\\n      'has-error' : myform.controls.email.invalid && myform.controls.email.touched ,\\n      'has-success' : myform.controls.email.valid\\n    }\\\" \\n  >\\n    <label for=\\\"\\\" class=\\\"control-label\\\">Email</label>\\n    <input \\n      type=\\\"email\\\" \\n      class=\\\"form-control\\\" \\n      placeholder=\\\"Email\\\"\\n      formControlName='email'\\n      required   \\n      email\\n    >\\n    <small *ngIf=\\\"myform.controls.email.invalid && myform.controls.email.touched\\\"  class=\\\"text-danger\\\"> Must be 5-30 characters long</small>  \\n  </div>\\n\\n  <!-- \\n    set class error if formControlName us invalid\\n    set class success if formControlName us valid\\n\\n    Validator [required] in html only\\n  -->\\n  <div class=\\\"form-group has-feedback\\\" \\n    [ngClass]=\\\"{\\n      'has-error' : myform.controls.password.invalid && myform.controls.password.touched ,\\n      'has-success' : myform.controls.password.valid\\n    }\\\"\\n  >\\n    <label for=\\\"\\\" class=\\\"control-label\\\">Password</label>\\n    <input \\n      type=\\\"password\\\" \\n      class=\\\"form-control\\\" \\n      placeholder=\\\"Password\\\"\\n      formControlName='password'\\n      required  \\n    >\\n    <small *ngIf=\\\"myform.controls.password.invalid && myform.controls.password.touched\\\"  class=\\\"text-danger\\\"> Must be 8-30 characters long</small>  \\n  </div>\\n  <!-- \\n    submit is disabled if form invalid\\n  -->\\n  <button type=\\\"submit\\\" [disabled]='myform.invalid'  class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/app/user/signin/signin.component.html\n// module id = ../../../../../src/app/user/signin/signin.component.html\n// module chunks = main","import { signinMyform } from './../user.formValidators';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup , Validators , FormControl } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Iuser } from '../app.user';\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html'\n})\nexport class SigninComponent implements OnInit {\n\n  // new signup form\n  myform:FormGroup;\n\n  // new user to signup\n  user:Iuser;\n\n  // to show alert of error\n  ErrorAlert:boolean = false;\n\n  constructor(private _userService:UserService , private _router:Router) { };\n\n  onSubmit() :void{\n    // user object\n    // signin with user\n    // Login the User in localStorge\n    // reset the form \n    // go to /chat\n    // if err -> throw Error\n    this.user = {\n      email : this.myform.controls.email.value,\n      password : this.myform.controls.password.value\n    };\n    this._userService.signinUser(this.user).subscribe( user =>{\n      this._userService.Login(user.token , user._id)\n      this.myform.reset();\n    },(err) =>{\n      this.ErrorAlert = true;\n      console.log(err) \n    });\n\n  };\n\n\n  ngOnInit() {\n    // create new form \n    // with email and password\n    // formControlName : ('' , [Validators])\n    this.myform = signinMyform ;\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/user/signin/signin.component.ts","module.exports = \"\\n<!-- show error in signup -->\\n<div *ngIf=\\\"ErrorAlert\\\"  class=\\\"alert alert-danger\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\n  <strong>Error</strong> Pleace Ckeck Your Date ... \\n</div>\\n\\n<form  role=\\\"form\\\" [formGroup]='myform' (submit)='onSubmit()'>\\n  <!-- \\n    set class error if formControlName us invalid\\n    set class success if formControlName us valid\\n\\n    Validator [required] in html only\\n  -->\\n  <div \\n    class=\\\"form-group has-feedback\\\" \\n    [ngClass]='{\\n      \\\"has-error\\\" : myform.controls.name.invalid && myform.controls.name.touched ,\\n      \\\"has-success\\\" : myform.controls.name.valid\\n      }'\\n  >\\n    <label for=\\\"\\\" class=\\\"control-label\\\">Name</label>\\n    <input \\n      type=\\\"text\\\" \\n      class=\\\"form-control\\\" \\n      placeholder=\\\"name\\\"\\n      formControlName='name'\\n      required   \\n    >\\n    <!-- danger message -->\\n    <small *ngIf=\\\"myform.controls.name.invalid && myform.controls.name.touched\\\"  class=\\\"text-danger\\\"> Must be 5-30 characters long</small>  \\n  </div>\\n\\n\\n\\n\\n  <!-- \\n    set class error if formControlName us invalid\\n    set class success if formControlName us valid\\n\\n    Validator [required , email] in html only\\n  -->\\n  <div \\n    class=\\\"form-group has-feedback\\\" \\n    [ngClass]='{\\n      \\\"has-error\\\" : myform.controls.email.invalid && myform.controls.email.touched ,\\n      \\\"has-success\\\" : myform.controls.email.valid\\n      }'\\n  >    \\n    <label for=\\\"\\\" class=\\\"control-label\\\">Email</label>\\n    <input \\n      type=\\\"email\\\" \\n      class=\\\"form-control\\\" \\n      placeholder=\\\"Email\\\"\\n      formControlName='email'\\n      required   \\n      email\\n    >\\n    <!-- danger message -->\\n    <small *ngIf=\\\"myform.controls.email.invalid && myform.controls.email.touched\\\"  class=\\\"text-danger\\\"> Must be Email</small> \\n  </div>\\n\\n  <!-- \\n    set class error if formControlName us invalid\\n    set class success if formControlName us valid\\n\\n    Validator [required] in html only\\n  -->\\n  <div \\n    class=\\\"form-group has-feedback\\\" \\n    [ngClass]='{\\n      \\\"has-error\\\" : myform.controls.password.invalid && myform.controls.password.touched ,\\n      \\\"has-success\\\" : myform.controls.password.valid\\n      }'\\n  >\\n    \\n    <label for=\\\"\\\" class=\\\"control-label\\\">Password</label>\\n    <input \\n      type=\\\"password\\\" \\n      class=\\\"form-control\\\" \\n      placeholder=\\\"Password\\\"\\n      formControlName='password'\\n      required\\n    >\\n    <!-- danger message -->\\n    <small *ngIf=\\\"myform.controls.password.invalid && myform.controls.password.touched\\\"  class=\\\"text-danger\\\"> Must be 8-30 characters long</small> \\n  </div>\\n\\n  <button type=\\\"submit\\\" [disabled]='myform.invalid'   class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/app/user/signup/signup.component.html\n// module id = ../../../../../src/app/user/signup/signup.component.html\n// module chunks = main","import { signupMyform } from './../user.formValidators';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup , Validators , FormControl } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Iuser } from '../app.user';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html'\n})\nexport class SignupComponent implements OnInit {\n  \n  // new signup form\n  myform:FormGroup;\n\n  // new user to signup\n  user:Iuser;\n\n  // to show alert of error\n  ErrorAlert:boolean = false;\n\n  constructor(private _userService:UserService , private _router:Router) { }\n\n  onSubmit() :void{\n    // new User\n    // singup new User\n    // Login the User in localStorge\n    // reset the form \n    // go to /chat\n    // if err throw Error\n    this.user = {\n      name : this.myform.controls.name.value,\n      email : this.myform.controls.email.value,\n      password : this.myform.controls.password.value\n    };\n    this._userService.signupUser(this.user).subscribe( user => {\n        this._userService.Login(user.token , user._id);  \n        this.myform.reset()\n      },( err ) =>{\n        this.ErrorAlert = true;\n        console.log(err)\n    });\n  };\n\n  ngOnInit() {\n    // create new form \n    // with name and email and password\n    // formControlName : ('' , [Validators])\n    this.myform = signupMyform;\n  };\n\n\n\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/user/signup/signup.component.ts","module.exports = \"<nav class=\\\" col-md-12\\\">\\n  <ul class=\\\" nav nav-tabs \\\">\\n      <!--\\n        isLogin()\\n          return true or false\\n          check if user is login with token\\n      -->\\n    <li><a  routerLinkActive='active' routerLink='signin' *ngIf=\\\"!isLogin()\\\" > signin</a></li>\\n    <li><a routerLinkActive='active' routerLink='signup' *ngIf=\\\"!isLogin()\\\" > signup</a></li>\\n    <li><a routerLinkActive='active' routerLink='logout' *ngIf=\\\"isLogin()\\\" > logout</a></li>\\n  </ul>\\n\\n  <br>\\n  <router-outlet></router-outlet>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ahmed/angular/Chat/client/src/app/user/user.component.html\n// module id = ../../../../../src/app/user/user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html'\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private _userService:UserService , private _rouer:Router){};\n  \n  // check if user is login\n  isLogin():boolean{\n    return this._userService.isLogin();\n  }\n  ngOnInit(){}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/user/user.component.ts","import { FormGroup , Validators , FormControl } from '@angular/forms';\n\n// create new form \n// with email and password\n// formControlName : ('' , [Validators])\nexport const signinMyform: FormGroup = new FormGroup({ \n    email : new FormControl('' , [Validators.required , Validators.email]),\n    password : new FormControl('', [Validators.required , Validators.minLength(8) , Validators.maxLength(30)])\n})\n\n// create new form \n// with name and email and password\n// formControlName : ('' , [Validators])\nexport const signupMyform : FormGroup = new FormGroup({ \n    name : new FormControl('' , [Validators.required , Validators.minLength(5),Validators.maxLength(30)]),\n    email : new FormControl('' , [Validators.required , Validators.email]),\n    password : new FormControl('', [Validators.required , Validators.minLength(8) , Validators.maxLength(30)])\n}) \n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/user/user.formValidators.ts","import { IsLoginGuard , IsNotLoginGuard } from './../app.guard';\nimport { LogoutComponent } from './logout/logout.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nexport const UserRouter : Routes = [\n    {path : '' ,  pathMatch:'full' , redirectTo : 'signin' },\n    {path : 'signin' , component : SigninComponent  ,canActivate : [IsNotLoginGuard] },\n    {path : 'signup' , component : SignupComponent  ,canActivate : [IsNotLoginGuard] },\n    {path : 'logout' , component : LogoutComponent , canActivate : [IsLoginGuard]  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/user/user.router.ts","import { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport { Iuser } from './app.user';\nimport { Injectable } from '@angular/core';\nimport { Http , Headers , Response} from '@angular/http';\nimport 'rxjs/add/operator/map';\n@Injectable()\nexport class UserService {\n  constructor(private _http:Http , private _router:Router) {};\n\n  // check Login \n  // with token\n  // with _id\n  isLogin() :boolean {\n     return localStorage.getItem('token') != null && localStorage.getItem('_id') != null\n  };\n\n  // this is run when open the app\n  // ckeck if user in DB\n  // ckeck if token is good\n  ckeckAuth(){\n    var headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this._http.get(`${environment.url}/api/ckeck?token=${localStorage.getItem('token')}&&_id=${localStorage.getItem('_id')}`,{ headers : headers})\n      .map((res:Response) => res.json());\n  }\n\n  // login user\n  // with token\n  // with _id\n  // go to chat\n  Login(token , _id) :void {\n    localStorage.setItem('token' , token);\n    localStorage.setItem('_id' , _id);\n    this._router.navigate(['/chat'])\n  }\n\n  // clear localStorage \n  // go to signin\n  Logout():void{\n    localStorage.clear();\n    this._router.navigate(['/user' , 'signin']);\n  }\n\n  // signup user with user interface Iuser\n  // return token and user with _id\n  signupUser( user:Iuser ) :any {\n    var headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this._http.post(environment.url + '/api/signup' , user , {headers :headers})\n      .map((res:Response) => res.json());\n  }\n\n  // signin user with email & password\n  // return token and user with _id\n  signinUser( user:Iuser ) :any {\n    var headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this._http.post(environment.url + '/api/signin' , user , {headers :headers})\n      .map((res:Response) => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/app/user/user.service.ts","export const environment = {\n  production: true,\n  // if server in prod\n  url : ''\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/ahmed/angular/Chat/client/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}